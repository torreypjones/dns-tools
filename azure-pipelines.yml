name: dnstools-test2-pipeline
# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

pr:
  branches:
    include:
    - '*'

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ab134823-1a42-4cd2-b91d-04828a5ce26a'
  imageRepository: 'dnstools'
  containerRegistry: 'dnstools.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  resourceGroupName: 'Example_pipelines'

pool:
  name: myprivate-pool
  vmImage: $(vmImageName)



stages:
- stage: Build1
  displayName: Works Build and deploy specific image with AzurecontainerApps@1
  jobs:
  - job: Build_Deploy
    displayName: Build and deploy
    pool:
      name: myprivate-pool
      vmImage: ubuntu-latest
    steps:
    - task: AzureContainerApps@1
      inputs:
        appSourcePath: '.'
        azureSubscription: 'Azure subscription 1(1)(98cf1ccb-3209-459c-a9f3-98ffb07edab5)'
        acrName: 'dnstools'
        dockerfilePath: './Dockerfile'
        imageToBuild: 'dnstools.azurecr.io/dnstools:latest'
        imageToDeploy: 'dnstools.azurecr.io/dnstools:latest'
        containerAppName: 'app-ghycbbyvsm6mo'
        resourceGroup: 'Example_pipelines'
        containerAppEnvironment: 'env-ghycbbyvsm6mo'
        # runtimeStack: 'nodejs'
        targetPort: '3000'
        ingress: 'external'
        location: 'eastus'

- stage: Build2
  displayName: Deploy image with no image AzurecontainerApps@1
  jobs:
  - job: Build_Deploy2
    displayName: Build and deploy2
    pool:
      name: myprivate-pool
      vmImage: ubuntu-latest
    steps:
    - task: AzureContainerApps@1
      inputs:
        appSourcePath: '.'
        azureSubscription: 'Azure subscription 1(1)(98cf1ccb-3209-459c-a9f3-98ffb07edab5)'
        acrName: 'dnstools'
        dockerfilePath: './Dockerfile'
        # imageToBuild: 'dnstools.azurecr.io/dnstools:latest'
        # imageToDeploy: 'dnstools.azurecr.io/dnstools:latest'
        containerAppName: 'app-ghycbbyvsm6mo'
        resourceGroup: 'Example_pipelines'
        containerAppEnvironment: 'env-ghycbbyvsm6mo'
        # runtimeStack: 'nodejs'
        targetPort: '3000'
        ingress: 'external'
        location: 'eastus'


- stage: Build3
  displayName: generic build and push stage
  jobs:
  - job: Build
    displayName: Build dnstools-test2
    pool:
      name: myprivate-pool
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment?view=azure-devops
    - task: AzureResourceGroupDeployment@2
      displayName: Deploy with AzureResourceGroupDeployment@2
      inputs:
        # azureSubscription: $(dockerRegistryServiceConnection)
        azureSubscription: 'Azure subscription 1(1)(98cf1ccb-3209-459c-a9f3-98ffb07edab5)'
        resourceGroupName: $(resourceGroupName)
        templateLocation: Linked artifact
        csmFile: './dns-tools-test2.json'
        csmParametersFile: ''  # Leave empty if not using a parameters file
        overrideParameters: |
          location=eastus
          containerRegistryName=dnstools
          containerImage=$(containerRegistry)/$(imageRepository):$(tag)
          minReplica=0
          maxReplica=1

 
  # add new job that deploy to container app
  # - job: Deploy
  #   displayName: Deploy dnstools-test2
  #   dependsOn: Build  # Ensure Deploy runs after Build
  #   steps:
  #     - task: AzureContainerApps@1
  #       inputs:
  #         azureSubscription: 'Azure subscription 1(98cf1ccb-3209-459c-a9f3-98ffb07edab5)'
  #         acrName: '$(dockerRegistryServiceConnection)'
  #         dockerfilePath: '$(dockerfilePath)'
  #         imageToBuild: '$(containerRegistry)/$(imageRepository):$(tag)'
  #         imageToDeploy: '$(containerRegistry)/$(imageRepository):$(tag)'
  #         containerAppName: 'app-ghycbbyvsm6mo'
  #         resourceGroup: 'Example_pipelines'
  #         containerAppEnvironment: 'env-ghycbbyvsm6mo'
  #         targetPort: '3000'
  #         location: 'eastus'
  #     - task: AzureResourceGroupDeployment@2
  #       inputs:
  #         # azureSubscription: $(dockerRegistryServiceConnection)
  #         resourceGroupName: $(resourceGroupName)
  #         templateLocation: Linked artifact
  #         csmFile: 'dns-tools-test2.json'
  #         csmParametersFile: ''  # Leave empty if not using a parameters file
  #         overrideParameters: |
  #           location=eastus
  #           containerRegistryName=dnstools
  #           containerImage=$(containerRegistry)/$(imageRepository):$(tag)
  #           minReplica=0
  #           maxReplica=1
